# Default values for openshift-routes.

replicas: 1
logLevel: 5

# This namespace allows you to define where the services are installed into.
# If not set then they use the namespace of the release.
# This is helpful when installing cert manager as a chart dependency (sub chart).
namespace: ""

# Override the "cert-manager.fullname" value. This value is used as part of
# most of the names of the resources created by this Helm chart.
# +docs:property
# fullnameOverride: "my-cert-manager"

# Override the "cert-manager.name" value, which is used to annotate some of
# the resources that are created by this Chart (using "app.kubernetes.io/name").
# NOTE: There are some inconsitencies in the Helm chart when it comes to
# these annotations (some resources use eg. "cainjector.name" which resolves
# to the value "cainjector").
# +docs:property
# nameOverride: "my-cert-manager"

# Control how certificates are issued for routes. 'certificate' mode (the default) will
# create a cert-manager Certificate resource and store the issued certificate in a
# Kubernetes Secret before adding it to the route.
# 'certificaterequest' mode will directly create a CertificateRequest resource, which makes
# the cert harder to use outside of Routes but avoids creating a Secret
issuanceMode: "certificate"

image:
  # Target image registry. This value is prepended to the target image repository, if set.
  # For example:
  #   registry: quay.io
  #   repository: jetstack/cert-manager-openshift-routes
  # +docs:property
  # registry: quay.io

  # Target image repository.
  repository: ghcr.io/cert-manager/cert-manager-openshift-routes

  # Override the image tag to deploy by setting this variable.
  # If no value is set, the chart's appVersion is used.
  # +docs:property
  # tag: vX.Y.Z

  # Target image digest. Override any tag, if set.
  # For example:
  #   digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
  # +docs:property
  # digest: sha256:...

  # Kubernetes imagePullPolicy on Deployment.
  pullPolicy: IfNotPresent

# Optional secrets used for pulling the openshift-routes container image.
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true

  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  # +docs:property
  # name: ""

  # Optional additional annotations to add to the controller's Service Account.
  # +docs:property
  # annotations: {}

rbac:
  # create (Cluster-) Roles and RoleBindings for the ServiceAccount
  create: true

# Annotations to add to the openshift-routes pod.
podAnnotations: {}

# Pod Security Context.
# For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# +docs:property
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container Security Context to be set on the controller component container.
# For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# +docs:property
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Kubernetes pod resources
# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
#
# For example:
#  resources:
#    limits:
#      memory: 128Mi
#    requests:
#      cpu: 100m
#      memory: 128Mi
resources: {}

# The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with
# matching labels.
# For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
#
# This default ensures that Pods are only scheduled to Linux nodes.
# It prevents Pods being scheduled to Windows nodes in a mixed OS cluster.
# +docs:property
nodeSelector:
  kubernetes.io/os: linux

# A list of Kubernetes Tolerations, if required. For more information, see [Toleration v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#toleration-v1-core).
#
# For example:
#   tolerations:
#   - key: foo.bar.com/role
#     operator: Equal
#     value: master
#     effect: NoSchedule
tolerations: []

# A Kubernetes Affinity, if required. For more information, see [Affinity v1 core](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#affinity-v1-core).
#
# For example:
#   affinity:
#     nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#        - matchExpressions:
#          - key: foo.bar.com/role
#            operator: In
#            values:
#            - master
affinity: {}

metrics:
  # when enabled, a service is created that exposes the metrics endpoint
  enabled: false

  serviceMonitor:
    # Create a ServiceMonitor to add openshift-routes to Prometheus.
    enabled: false

    # The interval to scrape metrics.
    interval: 60s

# Omit Helm-specific labels. This is useful when generating a static manifest
# with `helm template`.
omitHelmLabels: false
